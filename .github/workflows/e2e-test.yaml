name: e2e-test
permissions:
  id-token: write
  contents: read
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  e2e-test:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      CLUSTER_VPC_ID: ${{ secrets.CLUSTER_VPC_ID }}
      IMAGE_REPOSITORY: ${{ secrets.PRIVATE_IMAGE_REPOSITORY }}
      ECR_PUBLISH_ROLE_ARN: ${{ secrets.ECR_PUBLISH_IAM_ROLE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.INTEGRATION_TEST_IAM_ROLE }}
          role-duration-seconds: 14400
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Setup eksctl
        run: |
          curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
      # if CLUSTER_NAME exists - use it instead.
      # TODO: create cluster if it does not exist.
      - name: Get cluster credentials
        run: eksctl utils write-kubeconfig --cluster=$CLUSTER_NAME
      - name: Build and push image
        run: |
          SKIP_BUILD_CHART=1 VERSION=$GITHUB_SHA scripts/release-controller.sh
      - name: Install helm chart
        run: |
          helm install gateway-api-controller ./helm \
             --namespace aws-application-networking-system \
             --set=serviceAccount.create=false \
             --set=image.repository=$IMAGE_REPOSITORY \
             --set=image.tag=$GITHUB_SHA \
             --set=log.level=debug
      - name: Install v1 CRDs
        run: |
          kubectl apply -f config/crds/bases/k8s-gateway-v1.0.0.yaml
      - name: Install GatewayClass
        run: |
          kubectl apply -f examples/gatewayclass.yaml
      - name: Run test
        run: |
          FOCUS="HTTPRoute Creation" make e2e-test
      - name: Cleanup
        if: always()
        run: |
          make e2e-clean
      - name: Uninstall helm chart
        if: always()
        run: |
          helm uninstall gateway-api-controller --namespace aws-application-networking-system || true
